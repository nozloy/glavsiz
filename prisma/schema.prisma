generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  fullName    String
  email       String    @unique
  image       String?
  password    String
  verified    DateTime?
  provider    String?
  providerId  String?
  phoneNumber String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  role        Role      @default(USER)
  cart        Cart?
}

model ParentCategory {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  icon        String     @default("default_icon.png")
  description String?
  categories  Category[]
}

model Category {
  id               Int            @id @default(autoincrement())
  name             String
  parentCategoryId Int
  parentCategory   ParentCategory @relation(fields: [parentCategoryId], references: [id])
  Subcategory      Subcategory[]
  Item             Item[]
}

model Subcategory {
  id         Int      @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}

model Item {
  id                 Int        @id @default(autoincrement())
  name               String
  description        String?
  vendorCode         String?
  brand              String?
  count              Int        @default(0)
  size               String?
  images             String[]
  price              Int?
  season             Season?
  materials          String?
  materialLiner      String?
  materialInsulation String?
  color              String?
  composition        String?
  sizes              String?
  heights            String?
  category           Category?  @relation(fields: [categoryId], references: [id])
  categoryId         Int
  CartItem           CartItem[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int        @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
}

model CartItem {
  id       Int  @id @default(autoincrement())
  cart     Cart @relation(fields: [cartId], references: [id])
  cartId   Int
  item     Item @relation(fields: [itemId], references: [id])
  itemId   Int
  quantity Int  @default(1)
}

model City {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  contacts  Contact[]
  addresses Address[]
}

model Contact {
  id        Int       @id @default(autoincrement())
  one       String?
  two       String?
  three     String?
  city      City      @relation(fields: [cityId], references: [id])
  cityId    Int
  addresses Address[] @relation("ContactAddresses")
}

model Address {
  id       Int       @id @default(autoincrement())
  name     String
  url1     String
  url2     String?
  url3     String?
  city     City      @relation(fields: [cityId], references: [id])
  cityId   Int
  contacts Contact[] @relation("ContactAddresses")
}

enum Season {
  Spring
  Summer
  Autumn
  Winter
}

enum Role {
  ADMIN
  MODER
  USER
}
